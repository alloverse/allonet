#ifndef ALLOVERSE_VERIFIER_H
#define ALLOVERSE_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef ALLOVERSE_READER_H
#include "alloverse_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int Alloverse_State_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_Entity_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_Components_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_TransformComponent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_RelationshipsComponent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_LiveMediaMetadata_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_LiveMediaComponent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_ClockComponent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int Alloverse_IntentComponent_verify_table(flatcc_table_verifier_descriptor_t *td);

static inline int Alloverse_Mat4_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, Alloverse_Mat4_identifier, 128, 8);
}

static inline int Alloverse_Mat4_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, Alloverse_Mat4_type_hash, 128, 8);
}

static inline int Alloverse_Mat4_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 128, 8);
}

static inline int Alloverse_Mat4_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 128, 8);
}

static int Alloverse_State_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* revision */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &Alloverse_Entity_verify_table) /* entities */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_State_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_State_identifier, &Alloverse_State_verify_table);
}

static inline int Alloverse_State_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_State_type_identifier, &Alloverse_State_verify_table);
}

static inline int Alloverse_State_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_State_verify_table);
}

static inline int Alloverse_State_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_State_verify_table);
}

static int Alloverse_Entity_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* id */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* owner_agent_id */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 2, 0, &Alloverse_Components_verify_table) /* components */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_Entity_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_Entity_identifier, &Alloverse_Entity_verify_table);
}

static inline int Alloverse_Entity_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_Entity_type_identifier, &Alloverse_Entity_verify_table);
}

static inline int Alloverse_Entity_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_Entity_verify_table);
}

static inline int Alloverse_Entity_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_Entity_verify_table);
}

static int Alloverse_Components_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &Alloverse_TransformComponent_verify_table) /* transform */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &Alloverse_RelationshipsComponent_verify_table) /* relationships */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 2, 0, &Alloverse_LiveMediaComponent_verify_table) /* live_media */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 3, 0, &Alloverse_ClockComponent_verify_table) /* clock */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 4, 0, &Alloverse_IntentComponent_verify_table) /* intent */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 5, 0, 1, 1, INT64_C(4294967295)) /* flex */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_Components_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_Components_identifier, &Alloverse_Components_verify_table);
}

static inline int Alloverse_Components_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_Components_type_identifier, &Alloverse_Components_verify_table);
}

static inline int Alloverse_Components_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_Components_verify_table);
}

static inline int Alloverse_Components_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_Components_verify_table);
}

static int Alloverse_TransformComponent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 128, 8) /* matrix */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_TransformComponent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_TransformComponent_identifier, &Alloverse_TransformComponent_verify_table);
}

static inline int Alloverse_TransformComponent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_TransformComponent_type_identifier, &Alloverse_TransformComponent_verify_table);
}

static inline int Alloverse_TransformComponent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_TransformComponent_verify_table);
}

static inline int Alloverse_TransformComponent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_TransformComponent_verify_table);
}

static int Alloverse_RelationshipsComponent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* parent */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_RelationshipsComponent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_RelationshipsComponent_identifier, &Alloverse_RelationshipsComponent_verify_table);
}

static inline int Alloverse_RelationshipsComponent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_RelationshipsComponent_type_identifier, &Alloverse_RelationshipsComponent_verify_table);
}

static inline int Alloverse_RelationshipsComponent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_RelationshipsComponent_verify_table);
}

static inline int Alloverse_RelationshipsComponent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_RelationshipsComponent_verify_table);
}

static int Alloverse_LiveMediaMetadata_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* sample_rate */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* channel_layout */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* width */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* height */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_LiveMediaMetadata_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_LiveMediaMetadata_identifier, &Alloverse_LiveMediaMetadata_verify_table);
}

static inline int Alloverse_LiveMediaMetadata_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_LiveMediaMetadata_type_identifier, &Alloverse_LiveMediaMetadata_verify_table);
}

static inline int Alloverse_LiveMediaMetadata_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_LiveMediaMetadata_verify_table);
}

static inline int Alloverse_LiveMediaMetadata_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_LiveMediaMetadata_verify_table);
}

static int Alloverse_LiveMediaComponent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* track_id */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* type */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* format */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 3, 0, &Alloverse_LiveMediaMetadata_verify_table) /* metadata */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_LiveMediaComponent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_LiveMediaComponent_identifier, &Alloverse_LiveMediaComponent_verify_table);
}

static inline int Alloverse_LiveMediaComponent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_LiveMediaComponent_type_identifier, &Alloverse_LiveMediaComponent_verify_table);
}

static inline int Alloverse_LiveMediaComponent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_LiveMediaComponent_verify_table);
}

static inline int Alloverse_LiveMediaComponent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_LiveMediaComponent_verify_table);
}

static int Alloverse_ClockComponent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* time */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_ClockComponent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_ClockComponent_identifier, &Alloverse_ClockComponent_verify_table);
}

static inline int Alloverse_ClockComponent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_ClockComponent_type_identifier, &Alloverse_ClockComponent_verify_table);
}

static inline int Alloverse_ClockComponent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_ClockComponent_verify_table);
}

static inline int Alloverse_ClockComponent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_ClockComponent_verify_table);
}

static int Alloverse_IntentComponent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* actuate_pose */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* from_avatar */)) return ret;
    return flatcc_verify_ok;
}

static inline int Alloverse_IntentComponent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_IntentComponent_identifier, &Alloverse_IntentComponent_verify_table);
}

static inline int Alloverse_IntentComponent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, Alloverse_IntentComponent_type_identifier, &Alloverse_IntentComponent_verify_table);
}

static inline int Alloverse_IntentComponent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &Alloverse_IntentComponent_verify_table);
}

static inline int Alloverse_IntentComponent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &Alloverse_IntentComponent_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* ALLOVERSE_VERIFIER_H */
