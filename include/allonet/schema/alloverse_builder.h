#ifndef ALLOVERSE_BUILDER_H
#define ALLOVERSE_BUILDER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef ALLOVERSE_READER_H
#include "alloverse_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

#define __Alloverse_Mat4_formal_args , const double v0[16]
#define __Alloverse_Mat4_call_args , v0
static inline Alloverse_Mat4_t *Alloverse_Mat4_assign(Alloverse_Mat4_t *p, const double v0[16])
{ flatbuffers_double_array_copy(p->m, v0, 16);
  return p; }
static inline Alloverse_Mat4_t *Alloverse_Mat4_copy(Alloverse_Mat4_t *p, const Alloverse_Mat4_t *p2)
{ flatbuffers_double_array_copy(p->m, p2->m, 16);
  return p; }
static inline Alloverse_Mat4_t *Alloverse_Mat4_assign_to_pe(Alloverse_Mat4_t *p, const double v0[16])
{ flatbuffers_double_array_copy_to_pe(p->m, v0, 16);
  return p; }
static inline Alloverse_Mat4_t *Alloverse_Mat4_copy_to_pe(Alloverse_Mat4_t *p, const Alloverse_Mat4_t *p2)
{ flatbuffers_double_array_copy_to_pe(p->m, p2->m, 16);
  return p; }
static inline Alloverse_Mat4_t *Alloverse_Mat4_assign_from_pe(Alloverse_Mat4_t *p, const double v0[16])
{ flatbuffers_double_array_copy_from_pe(p->m, v0, 16);
  return p; }
static inline Alloverse_Mat4_t *Alloverse_Mat4_copy_from_pe(Alloverse_Mat4_t *p, const Alloverse_Mat4_t *p2)
{ flatbuffers_double_array_copy_from_pe(p->m, p2->m, 16);
  return p; }
__flatbuffers_build_struct(flatbuffers_, Alloverse_Mat4, 128, 8, Alloverse_Mat4_file_identifier, Alloverse_Mat4_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, Alloverse_Mat4, Alloverse_Mat4_t)

#define __Alloverse_Vec3_formal_args , const double v0[3]
#define __Alloverse_Vec3_call_args , v0
static inline Alloverse_Vec3_t *Alloverse_Vec3_assign(Alloverse_Vec3_t *p, const double v0[3])
{ flatbuffers_double_array_copy(p->v, v0, 3);
  return p; }
static inline Alloverse_Vec3_t *Alloverse_Vec3_copy(Alloverse_Vec3_t *p, const Alloverse_Vec3_t *p2)
{ flatbuffers_double_array_copy(p->v, p2->v, 3);
  return p; }
static inline Alloverse_Vec3_t *Alloverse_Vec3_assign_to_pe(Alloverse_Vec3_t *p, const double v0[3])
{ flatbuffers_double_array_copy_to_pe(p->v, v0, 3);
  return p; }
static inline Alloverse_Vec3_t *Alloverse_Vec3_copy_to_pe(Alloverse_Vec3_t *p, const Alloverse_Vec3_t *p2)
{ flatbuffers_double_array_copy_to_pe(p->v, p2->v, 3);
  return p; }
static inline Alloverse_Vec3_t *Alloverse_Vec3_assign_from_pe(Alloverse_Vec3_t *p, const double v0[3])
{ flatbuffers_double_array_copy_from_pe(p->v, v0, 3);
  return p; }
static inline Alloverse_Vec3_t *Alloverse_Vec3_copy_from_pe(Alloverse_Vec3_t *p, const Alloverse_Vec3_t *p2)
{ flatbuffers_double_array_copy_from_pe(p->v, p2->v, 3);
  return p; }
__flatbuffers_build_struct(flatbuffers_, Alloverse_Vec3, 24, 8, Alloverse_Vec3_file_identifier, Alloverse_Vec3_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, Alloverse_Vec3, Alloverse_Vec3_t)

typedef flatbuffers_union_ref_t Alloverse_AnimationValue_union_ref_t;
typedef flatbuffers_union_vec_ref_t Alloverse_AnimationValue_union_vec_ref_t;
static Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_clone(flatbuffers_builder_t *B, Alloverse_AnimationValue_union_t t);

static const flatbuffers_voffset_t __Alloverse_State_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_State_ref_t;
static Alloverse_State_ref_t Alloverse_State_clone(flatbuffers_builder_t *B, Alloverse_State_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_State, 2)

static const flatbuffers_voffset_t __Alloverse_Entity_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_Entity_ref_t;
static Alloverse_Entity_ref_t Alloverse_Entity_clone(flatbuffers_builder_t *B, Alloverse_Entity_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_Entity, 3)

static const flatbuffers_voffset_t __Alloverse_Components_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_Components_ref_t;
static Alloverse_Components_ref_t Alloverse_Components_clone(flatbuffers_builder_t *B, Alloverse_Components_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_Components, 10)

static const flatbuffers_voffset_t __Alloverse_TransformComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_TransformComponent_ref_t;
static Alloverse_TransformComponent_ref_t Alloverse_TransformComponent_clone(flatbuffers_builder_t *B, Alloverse_TransformComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_TransformComponent, 1)

static const flatbuffers_voffset_t __Alloverse_RelationshipsComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_RelationshipsComponent_ref_t;
static Alloverse_RelationshipsComponent_ref_t Alloverse_RelationshipsComponent_clone(flatbuffers_builder_t *B, Alloverse_RelationshipsComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_RelationshipsComponent, 1)

static const flatbuffers_voffset_t __Alloverse_LiveMediaMetadata_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_LiveMediaMetadata_ref_t;
static Alloverse_LiveMediaMetadata_ref_t Alloverse_LiveMediaMetadata_clone(flatbuffers_builder_t *B, Alloverse_LiveMediaMetadata_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_LiveMediaMetadata, 4)

static const flatbuffers_voffset_t __Alloverse_LiveMediaComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_LiveMediaComponent_ref_t;
static Alloverse_LiveMediaComponent_ref_t Alloverse_LiveMediaComponent_clone(flatbuffers_builder_t *B, Alloverse_LiveMediaComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_LiveMediaComponent, 4)

static const flatbuffers_voffset_t __Alloverse_ClockComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_ClockComponent_ref_t;
static Alloverse_ClockComponent_ref_t Alloverse_ClockComponent_clone(flatbuffers_builder_t *B, Alloverse_ClockComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_ClockComponent, 1)

static const flatbuffers_voffset_t __Alloverse_IntentComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_IntentComponent_ref_t;
static Alloverse_IntentComponent_ref_t Alloverse_IntentComponent_clone(flatbuffers_builder_t *B, Alloverse_IntentComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_IntentComponent, 2)

static const flatbuffers_voffset_t __Alloverse_NumberAnimationValue_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_NumberAnimationValue_ref_t;
static Alloverse_NumberAnimationValue_ref_t Alloverse_NumberAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_NumberAnimationValue_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_NumberAnimationValue, 1)

static const flatbuffers_voffset_t __Alloverse_VectorAnimationValue_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_VectorAnimationValue_ref_t;
static Alloverse_VectorAnimationValue_ref_t Alloverse_VectorAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_VectorAnimationValue_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_VectorAnimationValue, 1)

static const flatbuffers_voffset_t __Alloverse_RotationAnimationValue_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_RotationAnimationValue_ref_t;
static Alloverse_RotationAnimationValue_ref_t Alloverse_RotationAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_RotationAnimationValue_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_RotationAnimationValue, 2)

static const flatbuffers_voffset_t __Alloverse_TransformAnimationValue_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_TransformAnimationValue_ref_t;
static Alloverse_TransformAnimationValue_ref_t Alloverse_TransformAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_TransformAnimationValue_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_TransformAnimationValue, 1)

static const flatbuffers_voffset_t __Alloverse_PropertyAnimation_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_PropertyAnimation_ref_t;
static Alloverse_PropertyAnimation_ref_t Alloverse_PropertyAnimation_clone(flatbuffers_builder_t *B, Alloverse_PropertyAnimation_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_PropertyAnimation, 11)

static const flatbuffers_voffset_t __Alloverse_PropertyAnimationsComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_PropertyAnimationsComponent_ref_t;
static Alloverse_PropertyAnimationsComponent_ref_t Alloverse_PropertyAnimationsComponent_clone(flatbuffers_builder_t *B, Alloverse_PropertyAnimationsComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_PropertyAnimationsComponent, 1)

static const flatbuffers_voffset_t __Alloverse_GeometryComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_GeometryComponent_ref_t;
static Alloverse_GeometryComponent_ref_t Alloverse_GeometryComponent_clone(flatbuffers_builder_t *B, Alloverse_GeometryComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_GeometryComponent, 6)

static const flatbuffers_voffset_t __Alloverse_UIComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_UIComponent_ref_t;
static Alloverse_UIComponent_ref_t Alloverse_UIComponent_clone(flatbuffers_builder_t *B, Alloverse_UIComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_UIComponent, 1)

static const flatbuffers_voffset_t __Alloverse_ColliderComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_ColliderComponent_ref_t;
static Alloverse_ColliderComponent_ref_t Alloverse_ColliderComponent_clone(flatbuffers_builder_t *B, Alloverse_ColliderComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_ColliderComponent, 4)

static const flatbuffers_voffset_t __Alloverse_GrabbableComponent_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_GrabbableComponent_ref_t;
static Alloverse_GrabbableComponent_ref_t Alloverse_GrabbableComponent_clone(flatbuffers_builder_t *B, Alloverse_GrabbableComponent_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_GrabbableComponent, 5)

static const flatbuffers_voffset_t __Alloverse_EntitySpec_required[] = { 0 };
typedef flatbuffers_ref_t Alloverse_EntitySpec_ref_t;
static Alloverse_EntitySpec_ref_t Alloverse_EntitySpec_clone(flatbuffers_builder_t *B, Alloverse_EntitySpec_table_t t);
__flatbuffers_build_table(flatbuffers_, Alloverse_EntitySpec, 2)

#define __Alloverse_State_formal_args , uint64_t v0, Alloverse_Entity_vec_ref_t v1
#define __Alloverse_State_call_args , v0, v1
static inline Alloverse_State_ref_t Alloverse_State_create(flatbuffers_builder_t *B __Alloverse_State_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_State, Alloverse_State_file_identifier, Alloverse_State_type_identifier)

#define __Alloverse_Entity_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, Alloverse_Components_ref_t v2
#define __Alloverse_Entity_call_args , v0, v1, v2
static inline Alloverse_Entity_ref_t Alloverse_Entity_create(flatbuffers_builder_t *B __Alloverse_Entity_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_Entity, Alloverse_Entity_file_identifier, Alloverse_Entity_type_identifier)

#define __Alloverse_Components_formal_args ,\
  Alloverse_TransformComponent_ref_t v0, Alloverse_RelationshipsComponent_ref_t v1, Alloverse_LiveMediaComponent_ref_t v2, Alloverse_ClockComponent_ref_t v3,\
  Alloverse_IntentComponent_ref_t v4, Alloverse_PropertyAnimationsComponent_ref_t v5, Alloverse_GeometryComponent_ref_t v6, Alloverse_UIComponent_ref_t v7, Alloverse_ColliderComponent_ref_t v8, Alloverse_GrabbableComponent_ref_t v9
#define __Alloverse_Components_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7, v8, v9
static inline Alloverse_Components_ref_t Alloverse_Components_create(flatbuffers_builder_t *B __Alloverse_Components_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_Components, Alloverse_Components_file_identifier, Alloverse_Components_type_identifier)

#define __Alloverse_TransformComponent_formal_args , Alloverse_Mat4_t *v0
#define __Alloverse_TransformComponent_call_args , v0
static inline Alloverse_TransformComponent_ref_t Alloverse_TransformComponent_create(flatbuffers_builder_t *B __Alloverse_TransformComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_TransformComponent, Alloverse_TransformComponent_file_identifier, Alloverse_TransformComponent_type_identifier)

#define __Alloverse_RelationshipsComponent_formal_args , flatbuffers_string_ref_t v0
#define __Alloverse_RelationshipsComponent_call_args , v0
static inline Alloverse_RelationshipsComponent_ref_t Alloverse_RelationshipsComponent_create(flatbuffers_builder_t *B __Alloverse_RelationshipsComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_RelationshipsComponent, Alloverse_RelationshipsComponent_file_identifier, Alloverse_RelationshipsComponent_type_identifier)

#define __Alloverse_LiveMediaMetadata_formal_args , int32_t v0, flatbuffers_string_ref_t v1, int32_t v2, int32_t v3
#define __Alloverse_LiveMediaMetadata_call_args , v0, v1, v2, v3
static inline Alloverse_LiveMediaMetadata_ref_t Alloverse_LiveMediaMetadata_create(flatbuffers_builder_t *B __Alloverse_LiveMediaMetadata_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_LiveMediaMetadata, Alloverse_LiveMediaMetadata_file_identifier, Alloverse_LiveMediaMetadata_type_identifier)

#define __Alloverse_LiveMediaComponent_formal_args , int32_t v0, flatbuffers_string_ref_t v1, flatbuffers_string_ref_t v2, Alloverse_LiveMediaMetadata_ref_t v3
#define __Alloverse_LiveMediaComponent_call_args , v0, v1, v2, v3
static inline Alloverse_LiveMediaComponent_ref_t Alloverse_LiveMediaComponent_create(flatbuffers_builder_t *B __Alloverse_LiveMediaComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_LiveMediaComponent, Alloverse_LiveMediaComponent_file_identifier, Alloverse_LiveMediaComponent_type_identifier)

#define __Alloverse_ClockComponent_formal_args , double v0
#define __Alloverse_ClockComponent_call_args , v0
static inline Alloverse_ClockComponent_ref_t Alloverse_ClockComponent_create(flatbuffers_builder_t *B __Alloverse_ClockComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_ClockComponent, Alloverse_ClockComponent_file_identifier, Alloverse_ClockComponent_type_identifier)

#define __Alloverse_IntentComponent_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1
#define __Alloverse_IntentComponent_call_args , v0, v1
static inline Alloverse_IntentComponent_ref_t Alloverse_IntentComponent_create(flatbuffers_builder_t *B __Alloverse_IntentComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_IntentComponent, Alloverse_IntentComponent_file_identifier, Alloverse_IntentComponent_type_identifier)

#define __Alloverse_NumberAnimationValue_formal_args , double v0
#define __Alloverse_NumberAnimationValue_call_args , v0
static inline Alloverse_NumberAnimationValue_ref_t Alloverse_NumberAnimationValue_create(flatbuffers_builder_t *B __Alloverse_NumberAnimationValue_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_NumberAnimationValue, Alloverse_NumberAnimationValue_file_identifier, Alloverse_NumberAnimationValue_type_identifier)

#define __Alloverse_VectorAnimationValue_formal_args , Alloverse_Vec3_t *v0
#define __Alloverse_VectorAnimationValue_call_args , v0
static inline Alloverse_VectorAnimationValue_ref_t Alloverse_VectorAnimationValue_create(flatbuffers_builder_t *B __Alloverse_VectorAnimationValue_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_VectorAnimationValue, Alloverse_VectorAnimationValue_file_identifier, Alloverse_VectorAnimationValue_type_identifier)

#define __Alloverse_RotationAnimationValue_formal_args , double v0, Alloverse_Vec3_t *v1
#define __Alloverse_RotationAnimationValue_call_args , v0, v1
static inline Alloverse_RotationAnimationValue_ref_t Alloverse_RotationAnimationValue_create(flatbuffers_builder_t *B __Alloverse_RotationAnimationValue_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_RotationAnimationValue, Alloverse_RotationAnimationValue_file_identifier, Alloverse_RotationAnimationValue_type_identifier)

#define __Alloverse_TransformAnimationValue_formal_args , Alloverse_Mat4_t *v0
#define __Alloverse_TransformAnimationValue_call_args , v0
static inline Alloverse_TransformAnimationValue_ref_t Alloverse_TransformAnimationValue_create(flatbuffers_builder_t *B __Alloverse_TransformAnimationValue_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_TransformAnimationValue, Alloverse_TransformAnimationValue_file_identifier, Alloverse_TransformAnimationValue_type_identifier)

#define __Alloverse_PropertyAnimation_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, Alloverse_AnimationValue_union_ref_t v3, Alloverse_AnimationValue_union_ref_t v5,\
  double v6, double v7, flatbuffers_string_ref_t v8, flatbuffers_bool_t v9, flatbuffers_bool_t v10
#define __Alloverse_PropertyAnimation_call_args ,\
  v0, v1, v3, v5,\
  v6, v7, v8, v9, v10
static inline Alloverse_PropertyAnimation_ref_t Alloverse_PropertyAnimation_create(flatbuffers_builder_t *B __Alloverse_PropertyAnimation_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_PropertyAnimation, Alloverse_PropertyAnimation_file_identifier, Alloverse_PropertyAnimation_type_identifier)

#define __Alloverse_PropertyAnimationsComponent_formal_args , Alloverse_PropertyAnimation_vec_ref_t v0
#define __Alloverse_PropertyAnimationsComponent_call_args , v0
static inline Alloverse_PropertyAnimationsComponent_ref_t Alloverse_PropertyAnimationsComponent_create(flatbuffers_builder_t *B __Alloverse_PropertyAnimationsComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_PropertyAnimationsComponent, Alloverse_PropertyAnimationsComponent_file_identifier, Alloverse_PropertyAnimationsComponent_type_identifier)

#define __Alloverse_GeometryComponent_formal_args ,\
  flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1, flatbuffers_double_vec_ref_t v2, flatbuffers_double_vec_ref_t v3, flatbuffers_double_vec_ref_t v4, flatbuffers_int32_vec_ref_t v5
#define __Alloverse_GeometryComponent_call_args ,\
  v0, v1, v2, v3, v4, v5
static inline Alloverse_GeometryComponent_ref_t Alloverse_GeometryComponent_create(flatbuffers_builder_t *B __Alloverse_GeometryComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_GeometryComponent, Alloverse_GeometryComponent_file_identifier, Alloverse_GeometryComponent_type_identifier)

#define __Alloverse_UIComponent_formal_args , flatbuffers_string_ref_t v0
#define __Alloverse_UIComponent_call_args , v0
static inline Alloverse_UIComponent_ref_t Alloverse_UIComponent_create(flatbuffers_builder_t *B __Alloverse_UIComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_UIComponent, Alloverse_UIComponent_file_identifier, Alloverse_UIComponent_type_identifier)

#define __Alloverse_ColliderComponent_formal_args , flatbuffers_string_ref_t v0, double v1, double v2, double v3
#define __Alloverse_ColliderComponent_call_args , v0, v1, v2, v3
static inline Alloverse_ColliderComponent_ref_t Alloverse_ColliderComponent_create(flatbuffers_builder_t *B __Alloverse_ColliderComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_ColliderComponent, Alloverse_ColliderComponent_file_identifier, Alloverse_ColliderComponent_type_identifier)

#define __Alloverse_GrabbableComponent_formal_args ,\
  flatbuffers_bool_t v0, flatbuffers_string_ref_t v1, flatbuffers_double_vec_ref_t v2, flatbuffers_double_vec_ref_t v3, Alloverse_Mat4_t *v4
#define __Alloverse_GrabbableComponent_call_args ,\
  v0, v1, v2, v3, v4
static inline Alloverse_GrabbableComponent_ref_t Alloverse_GrabbableComponent_create(flatbuffers_builder_t *B __Alloverse_GrabbableComponent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_GrabbableComponent, Alloverse_GrabbableComponent_file_identifier, Alloverse_GrabbableComponent_type_identifier)

#define __Alloverse_EntitySpec_formal_args , Alloverse_Components_ref_t v0, Alloverse_EntitySpec_vec_ref_t v1
#define __Alloverse_EntitySpec_call_args , v0, v1
static inline Alloverse_EntitySpec_ref_t Alloverse_EntitySpec_create(flatbuffers_builder_t *B __Alloverse_EntitySpec_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, Alloverse_EntitySpec, Alloverse_EntitySpec_file_identifier, Alloverse_EntitySpec_type_identifier)

static inline Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_as_NONE(void)
{ Alloverse_AnimationValue_union_ref_t uref; uref.type = Alloverse_AnimationValue_NONE; uref.value = 0; return uref; }
static inline Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_as_number(Alloverse_NumberAnimationValue_ref_t ref)
{ Alloverse_AnimationValue_union_ref_t uref; uref.type = Alloverse_AnimationValue_number; uref.value = ref; return uref; }
static inline Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_as_vector(Alloverse_VectorAnimationValue_ref_t ref)
{ Alloverse_AnimationValue_union_ref_t uref; uref.type = Alloverse_AnimationValue_vector; uref.value = ref; return uref; }
static inline Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_as_rotation(Alloverse_RotationAnimationValue_ref_t ref)
{ Alloverse_AnimationValue_union_ref_t uref; uref.type = Alloverse_AnimationValue_rotation; uref.value = ref; return uref; }
static inline Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_as_matrix(Alloverse_TransformAnimationValue_ref_t ref)
{ Alloverse_AnimationValue_union_ref_t uref; uref.type = Alloverse_AnimationValue_matrix; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, Alloverse_AnimationValue)

static Alloverse_AnimationValue_union_ref_t Alloverse_AnimationValue_clone(flatbuffers_builder_t *B, Alloverse_AnimationValue_union_t u)
{
    switch (u.type) {
    case 1: return Alloverse_AnimationValue_as_number(Alloverse_NumberAnimationValue_clone(B, (Alloverse_NumberAnimationValue_table_t)u.value));
    case 2: return Alloverse_AnimationValue_as_vector(Alloverse_VectorAnimationValue_clone(B, (Alloverse_VectorAnimationValue_table_t)u.value));
    case 3: return Alloverse_AnimationValue_as_rotation(Alloverse_RotationAnimationValue_clone(B, (Alloverse_RotationAnimationValue_table_t)u.value));
    case 4: return Alloverse_AnimationValue_as_matrix(Alloverse_TransformAnimationValue_clone(B, (Alloverse_TransformAnimationValue_table_t)u.value));
    default: return Alloverse_AnimationValue_as_NONE();
    }
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_State_revision, flatbuffers_uint64, uint64_t, 8, 8, UINT64_C(0), Alloverse_State)
/* vector has keyed elements */
__flatbuffers_build_table_vector_field(1, flatbuffers_, Alloverse_State_entities, Alloverse_Entity, Alloverse_State)

static inline Alloverse_State_ref_t Alloverse_State_create(flatbuffers_builder_t *B __Alloverse_State_formal_args)
{
    if (Alloverse_State_start(B)
        || Alloverse_State_revision_add(B, v0)
        || Alloverse_State_entities_add(B, v1)) {
        return 0;
    }
    return Alloverse_State_end(B);
}

static Alloverse_State_ref_t Alloverse_State_clone(flatbuffers_builder_t *B, Alloverse_State_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_State_start(B)
        || Alloverse_State_revision_pick(B, t)
        || Alloverse_State_entities_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_State_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_Entity_id, Alloverse_Entity)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_Entity_owner_agent_id, Alloverse_Entity)
__flatbuffers_build_table_field(2, flatbuffers_, Alloverse_Entity_components, Alloverse_Components, Alloverse_Entity)

static inline Alloverse_Entity_ref_t Alloverse_Entity_create(flatbuffers_builder_t *B __Alloverse_Entity_formal_args)
{
    if (Alloverse_Entity_start(B)
        || Alloverse_Entity_id_add(B, v0)
        || Alloverse_Entity_owner_agent_id_add(B, v1)
        || Alloverse_Entity_components_add(B, v2)) {
        return 0;
    }
    return Alloverse_Entity_end(B);
}

static Alloverse_Entity_ref_t Alloverse_Entity_clone(flatbuffers_builder_t *B, Alloverse_Entity_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_Entity_start(B)
        || Alloverse_Entity_id_pick(B, t)
        || Alloverse_Entity_owner_agent_id_pick(B, t)
        || Alloverse_Entity_components_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_Entity_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, Alloverse_Components_transform, Alloverse_TransformComponent, Alloverse_Components)
__flatbuffers_build_table_field(1, flatbuffers_, Alloverse_Components_relationships, Alloverse_RelationshipsComponent, Alloverse_Components)
__flatbuffers_build_table_field(2, flatbuffers_, Alloverse_Components_live_media, Alloverse_LiveMediaComponent, Alloverse_Components)
__flatbuffers_build_table_field(3, flatbuffers_, Alloverse_Components_clock, Alloverse_ClockComponent, Alloverse_Components)
__flatbuffers_build_table_field(4, flatbuffers_, Alloverse_Components_intent, Alloverse_IntentComponent, Alloverse_Components)
__flatbuffers_build_table_field(5, flatbuffers_, Alloverse_Components_property_animations, Alloverse_PropertyAnimationsComponent, Alloverse_Components)
__flatbuffers_build_table_field(6, flatbuffers_, Alloverse_Components_geometry, Alloverse_GeometryComponent, Alloverse_Components)
__flatbuffers_build_table_field(7, flatbuffers_, Alloverse_Components_ui, Alloverse_UIComponent, Alloverse_Components)
__flatbuffers_build_table_field(8, flatbuffers_, Alloverse_Components_collider, Alloverse_ColliderComponent, Alloverse_Components)
__flatbuffers_build_table_field(9, flatbuffers_, Alloverse_Components_grabbable, Alloverse_GrabbableComponent, Alloverse_Components)

static inline Alloverse_Components_ref_t Alloverse_Components_create(flatbuffers_builder_t *B __Alloverse_Components_formal_args)
{
    if (Alloverse_Components_start(B)
        || Alloverse_Components_transform_add(B, v0)
        || Alloverse_Components_relationships_add(B, v1)
        || Alloverse_Components_live_media_add(B, v2)
        || Alloverse_Components_clock_add(B, v3)
        || Alloverse_Components_intent_add(B, v4)
        || Alloverse_Components_property_animations_add(B, v5)
        || Alloverse_Components_geometry_add(B, v6)
        || Alloverse_Components_ui_add(B, v7)
        || Alloverse_Components_collider_add(B, v8)
        || Alloverse_Components_grabbable_add(B, v9)) {
        return 0;
    }
    return Alloverse_Components_end(B);
}

static Alloverse_Components_ref_t Alloverse_Components_clone(flatbuffers_builder_t *B, Alloverse_Components_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_Components_start(B)
        || Alloverse_Components_transform_pick(B, t)
        || Alloverse_Components_relationships_pick(B, t)
        || Alloverse_Components_live_media_pick(B, t)
        || Alloverse_Components_clock_pick(B, t)
        || Alloverse_Components_intent_pick(B, t)
        || Alloverse_Components_property_animations_pick(B, t)
        || Alloverse_Components_geometry_pick(B, t)
        || Alloverse_Components_ui_pick(B, t)
        || Alloverse_Components_collider_pick(B, t)
        || Alloverse_Components_grabbable_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_Components_end(B));
}

__flatbuffers_build_struct_field(0, flatbuffers_, Alloverse_TransformComponent_matrix, Alloverse_Mat4, 128, 8, Alloverse_TransformComponent)

static inline Alloverse_TransformComponent_ref_t Alloverse_TransformComponent_create(flatbuffers_builder_t *B __Alloverse_TransformComponent_formal_args)
{
    if (Alloverse_TransformComponent_start(B)
        || Alloverse_TransformComponent_matrix_add(B, v0)) {
        return 0;
    }
    return Alloverse_TransformComponent_end(B);
}

static Alloverse_TransformComponent_ref_t Alloverse_TransformComponent_clone(flatbuffers_builder_t *B, Alloverse_TransformComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_TransformComponent_start(B)
        || Alloverse_TransformComponent_matrix_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_TransformComponent_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_RelationshipsComponent_parent, Alloverse_RelationshipsComponent)

static inline Alloverse_RelationshipsComponent_ref_t Alloverse_RelationshipsComponent_create(flatbuffers_builder_t *B __Alloverse_RelationshipsComponent_formal_args)
{
    if (Alloverse_RelationshipsComponent_start(B)
        || Alloverse_RelationshipsComponent_parent_add(B, v0)) {
        return 0;
    }
    return Alloverse_RelationshipsComponent_end(B);
}

static Alloverse_RelationshipsComponent_ref_t Alloverse_RelationshipsComponent_clone(flatbuffers_builder_t *B, Alloverse_RelationshipsComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_RelationshipsComponent_start(B)
        || Alloverse_RelationshipsComponent_parent_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_RelationshipsComponent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_LiveMediaMetadata_sample_rate, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Alloverse_LiveMediaMetadata)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_LiveMediaMetadata_channel_layout, Alloverse_LiveMediaMetadata)
__flatbuffers_build_scalar_field(2, flatbuffers_, Alloverse_LiveMediaMetadata_width, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Alloverse_LiveMediaMetadata)
__flatbuffers_build_scalar_field(3, flatbuffers_, Alloverse_LiveMediaMetadata_height, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Alloverse_LiveMediaMetadata)

static inline Alloverse_LiveMediaMetadata_ref_t Alloverse_LiveMediaMetadata_create(flatbuffers_builder_t *B __Alloverse_LiveMediaMetadata_formal_args)
{
    if (Alloverse_LiveMediaMetadata_start(B)
        || Alloverse_LiveMediaMetadata_sample_rate_add(B, v0)
        || Alloverse_LiveMediaMetadata_channel_layout_add(B, v1)
        || Alloverse_LiveMediaMetadata_width_add(B, v2)
        || Alloverse_LiveMediaMetadata_height_add(B, v3)) {
        return 0;
    }
    return Alloverse_LiveMediaMetadata_end(B);
}

static Alloverse_LiveMediaMetadata_ref_t Alloverse_LiveMediaMetadata_clone(flatbuffers_builder_t *B, Alloverse_LiveMediaMetadata_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_LiveMediaMetadata_start(B)
        || Alloverse_LiveMediaMetadata_sample_rate_pick(B, t)
        || Alloverse_LiveMediaMetadata_channel_layout_pick(B, t)
        || Alloverse_LiveMediaMetadata_width_pick(B, t)
        || Alloverse_LiveMediaMetadata_height_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_LiveMediaMetadata_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_LiveMediaComponent_track_id, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), Alloverse_LiveMediaComponent)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_LiveMediaComponent_type, Alloverse_LiveMediaComponent)
__flatbuffers_build_string_field(2, flatbuffers_, Alloverse_LiveMediaComponent_format, Alloverse_LiveMediaComponent)
__flatbuffers_build_table_field(3, flatbuffers_, Alloverse_LiveMediaComponent_metadata, Alloverse_LiveMediaMetadata, Alloverse_LiveMediaComponent)

static inline Alloverse_LiveMediaComponent_ref_t Alloverse_LiveMediaComponent_create(flatbuffers_builder_t *B __Alloverse_LiveMediaComponent_formal_args)
{
    if (Alloverse_LiveMediaComponent_start(B)
        || Alloverse_LiveMediaComponent_track_id_add(B, v0)
        || Alloverse_LiveMediaComponent_type_add(B, v1)
        || Alloverse_LiveMediaComponent_format_add(B, v2)
        || Alloverse_LiveMediaComponent_metadata_add(B, v3)) {
        return 0;
    }
    return Alloverse_LiveMediaComponent_end(B);
}

static Alloverse_LiveMediaComponent_ref_t Alloverse_LiveMediaComponent_clone(flatbuffers_builder_t *B, Alloverse_LiveMediaComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_LiveMediaComponent_start(B)
        || Alloverse_LiveMediaComponent_track_id_pick(B, t)
        || Alloverse_LiveMediaComponent_type_pick(B, t)
        || Alloverse_LiveMediaComponent_format_pick(B, t)
        || Alloverse_LiveMediaComponent_metadata_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_LiveMediaComponent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_ClockComponent_time, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_ClockComponent)

static inline Alloverse_ClockComponent_ref_t Alloverse_ClockComponent_create(flatbuffers_builder_t *B __Alloverse_ClockComponent_formal_args)
{
    if (Alloverse_ClockComponent_start(B)
        || Alloverse_ClockComponent_time_add(B, v0)) {
        return 0;
    }
    return Alloverse_ClockComponent_end(B);
}

static Alloverse_ClockComponent_ref_t Alloverse_ClockComponent_clone(flatbuffers_builder_t *B, Alloverse_ClockComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_ClockComponent_start(B)
        || Alloverse_ClockComponent_time_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_ClockComponent_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_IntentComponent_actuate_pose, Alloverse_IntentComponent)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_IntentComponent_from_avatar, Alloverse_IntentComponent)

static inline Alloverse_IntentComponent_ref_t Alloverse_IntentComponent_create(flatbuffers_builder_t *B __Alloverse_IntentComponent_formal_args)
{
    if (Alloverse_IntentComponent_start(B)
        || Alloverse_IntentComponent_actuate_pose_add(B, v0)
        || Alloverse_IntentComponent_from_avatar_add(B, v1)) {
        return 0;
    }
    return Alloverse_IntentComponent_end(B);
}

static Alloverse_IntentComponent_ref_t Alloverse_IntentComponent_clone(flatbuffers_builder_t *B, Alloverse_IntentComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_IntentComponent_start(B)
        || Alloverse_IntentComponent_actuate_pose_pick(B, t)
        || Alloverse_IntentComponent_from_avatar_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_IntentComponent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_NumberAnimationValue_number, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_NumberAnimationValue)

static inline Alloverse_NumberAnimationValue_ref_t Alloverse_NumberAnimationValue_create(flatbuffers_builder_t *B __Alloverse_NumberAnimationValue_formal_args)
{
    if (Alloverse_NumberAnimationValue_start(B)
        || Alloverse_NumberAnimationValue_number_add(B, v0)) {
        return 0;
    }
    return Alloverse_NumberAnimationValue_end(B);
}

static Alloverse_NumberAnimationValue_ref_t Alloverse_NumberAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_NumberAnimationValue_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_NumberAnimationValue_start(B)
        || Alloverse_NumberAnimationValue_number_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_NumberAnimationValue_end(B));
}

__flatbuffers_build_struct_field(0, flatbuffers_, Alloverse_VectorAnimationValue_vector, Alloverse_Vec3, 24, 8, Alloverse_VectorAnimationValue)

static inline Alloverse_VectorAnimationValue_ref_t Alloverse_VectorAnimationValue_create(flatbuffers_builder_t *B __Alloverse_VectorAnimationValue_formal_args)
{
    if (Alloverse_VectorAnimationValue_start(B)
        || Alloverse_VectorAnimationValue_vector_add(B, v0)) {
        return 0;
    }
    return Alloverse_VectorAnimationValue_end(B);
}

static Alloverse_VectorAnimationValue_ref_t Alloverse_VectorAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_VectorAnimationValue_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_VectorAnimationValue_start(B)
        || Alloverse_VectorAnimationValue_vector_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_VectorAnimationValue_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_RotationAnimationValue_angle, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_RotationAnimationValue)
__flatbuffers_build_struct_field(1, flatbuffers_, Alloverse_RotationAnimationValue_axis, Alloverse_Vec3, 24, 8, Alloverse_RotationAnimationValue)

static inline Alloverse_RotationAnimationValue_ref_t Alloverse_RotationAnimationValue_create(flatbuffers_builder_t *B __Alloverse_RotationAnimationValue_formal_args)
{
    if (Alloverse_RotationAnimationValue_start(B)
        || Alloverse_RotationAnimationValue_angle_add(B, v0)
        || Alloverse_RotationAnimationValue_axis_add(B, v1)) {
        return 0;
    }
    return Alloverse_RotationAnimationValue_end(B);
}

static Alloverse_RotationAnimationValue_ref_t Alloverse_RotationAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_RotationAnimationValue_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_RotationAnimationValue_start(B)
        || Alloverse_RotationAnimationValue_angle_pick(B, t)
        || Alloverse_RotationAnimationValue_axis_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_RotationAnimationValue_end(B));
}

__flatbuffers_build_struct_field(0, flatbuffers_, Alloverse_TransformAnimationValue_matrix, Alloverse_Mat4, 128, 8, Alloverse_TransformAnimationValue)

static inline Alloverse_TransformAnimationValue_ref_t Alloverse_TransformAnimationValue_create(flatbuffers_builder_t *B __Alloverse_TransformAnimationValue_formal_args)
{
    if (Alloverse_TransformAnimationValue_start(B)
        || Alloverse_TransformAnimationValue_matrix_add(B, v0)) {
        return 0;
    }
    return Alloverse_TransformAnimationValue_end(B);
}

static Alloverse_TransformAnimationValue_ref_t Alloverse_TransformAnimationValue_clone(flatbuffers_builder_t *B, Alloverse_TransformAnimationValue_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_TransformAnimationValue_start(B)
        || Alloverse_TransformAnimationValue_matrix_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_TransformAnimationValue_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_PropertyAnimation_id, Alloverse_PropertyAnimation)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_PropertyAnimation_path, Alloverse_PropertyAnimation)
__flatbuffers_build_union_field(3, flatbuffers_, Alloverse_PropertyAnimation_from, Alloverse_AnimationValue, Alloverse_PropertyAnimation)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_from, Alloverse_AnimationValue, number, Alloverse_NumberAnimationValue)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_from, Alloverse_AnimationValue, vector, Alloverse_VectorAnimationValue)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_from, Alloverse_AnimationValue, rotation, Alloverse_RotationAnimationValue)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_from, Alloverse_AnimationValue, matrix, Alloverse_TransformAnimationValue)
__flatbuffers_build_union_field(5, flatbuffers_, Alloverse_PropertyAnimation_to, Alloverse_AnimationValue, Alloverse_PropertyAnimation)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_to, Alloverse_AnimationValue, number, Alloverse_NumberAnimationValue)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_to, Alloverse_AnimationValue, vector, Alloverse_VectorAnimationValue)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_to, Alloverse_AnimationValue, rotation, Alloverse_RotationAnimationValue)
__flatbuffers_build_union_table_value_field(flatbuffers_, Alloverse_PropertyAnimation_to, Alloverse_AnimationValue, matrix, Alloverse_TransformAnimationValue)
__flatbuffers_build_scalar_field(6, flatbuffers_, Alloverse_PropertyAnimation_start_at, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_PropertyAnimation)
__flatbuffers_build_scalar_field(7, flatbuffers_, Alloverse_PropertyAnimation_duration, flatbuffers_double, double, 8, 8, 1.0000000000000000, Alloverse_PropertyAnimation)
__flatbuffers_build_string_field(8, flatbuffers_, Alloverse_PropertyAnimation_easing, Alloverse_PropertyAnimation)
__flatbuffers_build_scalar_field(9, flatbuffers_, Alloverse_PropertyAnimation_repeats, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), Alloverse_PropertyAnimation)
__flatbuffers_build_scalar_field(10, flatbuffers_, Alloverse_PropertyAnimation_autoreverses, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), Alloverse_PropertyAnimation)

static inline Alloverse_PropertyAnimation_ref_t Alloverse_PropertyAnimation_create(flatbuffers_builder_t *B __Alloverse_PropertyAnimation_formal_args)
{
    if (Alloverse_PropertyAnimation_start(B)
        || Alloverse_PropertyAnimation_start_at_add(B, v6)
        || Alloverse_PropertyAnimation_duration_add(B, v7)
        || Alloverse_PropertyAnimation_id_add(B, v0)
        || Alloverse_PropertyAnimation_path_add(B, v1)
        || Alloverse_PropertyAnimation_from_add_value(B, v3)
        || Alloverse_PropertyAnimation_to_add_value(B, v5)
        || Alloverse_PropertyAnimation_easing_add(B, v8)
        || Alloverse_PropertyAnimation_repeats_add(B, v9)
        || Alloverse_PropertyAnimation_autoreverses_add(B, v10)
        || Alloverse_PropertyAnimation_from_add_type(B, v3.type)
        || Alloverse_PropertyAnimation_to_add_type(B, v5.type)) {
        return 0;
    }
    return Alloverse_PropertyAnimation_end(B);
}

static Alloverse_PropertyAnimation_ref_t Alloverse_PropertyAnimation_clone(flatbuffers_builder_t *B, Alloverse_PropertyAnimation_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_PropertyAnimation_start(B)
        || Alloverse_PropertyAnimation_start_at_pick(B, t)
        || Alloverse_PropertyAnimation_duration_pick(B, t)
        || Alloverse_PropertyAnimation_id_pick(B, t)
        || Alloverse_PropertyAnimation_path_pick(B, t)
        || Alloverse_PropertyAnimation_from_pick(B, t)
        || Alloverse_PropertyAnimation_to_pick(B, t)
        || Alloverse_PropertyAnimation_easing_pick(B, t)
        || Alloverse_PropertyAnimation_repeats_pick(B, t)
        || Alloverse_PropertyAnimation_autoreverses_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_PropertyAnimation_end(B));
}

/* vector has keyed elements */
__flatbuffers_build_table_vector_field(0, flatbuffers_, Alloverse_PropertyAnimationsComponent_animations, Alloverse_PropertyAnimation, Alloverse_PropertyAnimationsComponent)

static inline Alloverse_PropertyAnimationsComponent_ref_t Alloverse_PropertyAnimationsComponent_create(flatbuffers_builder_t *B __Alloverse_PropertyAnimationsComponent_formal_args)
{
    if (Alloverse_PropertyAnimationsComponent_start(B)
        || Alloverse_PropertyAnimationsComponent_animations_add(B, v0)) {
        return 0;
    }
    return Alloverse_PropertyAnimationsComponent_end(B);
}

static Alloverse_PropertyAnimationsComponent_ref_t Alloverse_PropertyAnimationsComponent_clone(flatbuffers_builder_t *B, Alloverse_PropertyAnimationsComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_PropertyAnimationsComponent_start(B)
        || Alloverse_PropertyAnimationsComponent_animations_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_PropertyAnimationsComponent_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_GeometryComponent_type, Alloverse_GeometryComponent)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_GeometryComponent_name, Alloverse_GeometryComponent)
__flatbuffers_build_vector_field(2, flatbuffers_, Alloverse_GeometryComponent_vertices, flatbuffers_double, double, Alloverse_GeometryComponent)
__flatbuffers_build_vector_field(3, flatbuffers_, Alloverse_GeometryComponent_normals, flatbuffers_double, double, Alloverse_GeometryComponent)
__flatbuffers_build_vector_field(4, flatbuffers_, Alloverse_GeometryComponent_uvs, flatbuffers_double, double, Alloverse_GeometryComponent)
__flatbuffers_build_vector_field(5, flatbuffers_, Alloverse_GeometryComponent_triangles, flatbuffers_int32, int32_t, Alloverse_GeometryComponent)

static inline Alloverse_GeometryComponent_ref_t Alloverse_GeometryComponent_create(flatbuffers_builder_t *B __Alloverse_GeometryComponent_formal_args)
{
    if (Alloverse_GeometryComponent_start(B)
        || Alloverse_GeometryComponent_type_add(B, v0)
        || Alloverse_GeometryComponent_name_add(B, v1)
        || Alloverse_GeometryComponent_vertices_add(B, v2)
        || Alloverse_GeometryComponent_normals_add(B, v3)
        || Alloverse_GeometryComponent_uvs_add(B, v4)
        || Alloverse_GeometryComponent_triangles_add(B, v5)) {
        return 0;
    }
    return Alloverse_GeometryComponent_end(B);
}

static Alloverse_GeometryComponent_ref_t Alloverse_GeometryComponent_clone(flatbuffers_builder_t *B, Alloverse_GeometryComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_GeometryComponent_start(B)
        || Alloverse_GeometryComponent_type_pick(B, t)
        || Alloverse_GeometryComponent_name_pick(B, t)
        || Alloverse_GeometryComponent_vertices_pick(B, t)
        || Alloverse_GeometryComponent_normals_pick(B, t)
        || Alloverse_GeometryComponent_uvs_pick(B, t)
        || Alloverse_GeometryComponent_triangles_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_GeometryComponent_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_UIComponent_view_id, Alloverse_UIComponent)

static inline Alloverse_UIComponent_ref_t Alloverse_UIComponent_create(flatbuffers_builder_t *B __Alloverse_UIComponent_formal_args)
{
    if (Alloverse_UIComponent_start(B)
        || Alloverse_UIComponent_view_id_add(B, v0)) {
        return 0;
    }
    return Alloverse_UIComponent_end(B);
}

static Alloverse_UIComponent_ref_t Alloverse_UIComponent_clone(flatbuffers_builder_t *B, Alloverse_UIComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_UIComponent_start(B)
        || Alloverse_UIComponent_view_id_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_UIComponent_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, Alloverse_ColliderComponent_type, Alloverse_ColliderComponent)
__flatbuffers_build_scalar_field(1, flatbuffers_, Alloverse_ColliderComponent_width, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_ColliderComponent)
__flatbuffers_build_scalar_field(2, flatbuffers_, Alloverse_ColliderComponent_height, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_ColliderComponent)
__flatbuffers_build_scalar_field(3, flatbuffers_, Alloverse_ColliderComponent_depth, flatbuffers_double, double, 8, 8, 0.0000000000000000, Alloverse_ColliderComponent)

static inline Alloverse_ColliderComponent_ref_t Alloverse_ColliderComponent_create(flatbuffers_builder_t *B __Alloverse_ColliderComponent_formal_args)
{
    if (Alloverse_ColliderComponent_start(B)
        || Alloverse_ColliderComponent_width_add(B, v1)
        || Alloverse_ColliderComponent_height_add(B, v2)
        || Alloverse_ColliderComponent_depth_add(B, v3)
        || Alloverse_ColliderComponent_type_add(B, v0)) {
        return 0;
    }
    return Alloverse_ColliderComponent_end(B);
}

static Alloverse_ColliderComponent_ref_t Alloverse_ColliderComponent_clone(flatbuffers_builder_t *B, Alloverse_ColliderComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_ColliderComponent_start(B)
        || Alloverse_ColliderComponent_width_pick(B, t)
        || Alloverse_ColliderComponent_height_pick(B, t)
        || Alloverse_ColliderComponent_depth_pick(B, t)
        || Alloverse_ColliderComponent_type_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_ColliderComponent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, Alloverse_GrabbableComponent_grabbable, flatbuffers_bool, flatbuffers_bool_t, 1, 1, UINT8_C(0), Alloverse_GrabbableComponent)
__flatbuffers_build_string_field(1, flatbuffers_, Alloverse_GrabbableComponent_actuate_on, Alloverse_GrabbableComponent)
__flatbuffers_build_vector_field(2, flatbuffers_, Alloverse_GrabbableComponent_translation_constraint, flatbuffers_double, double, Alloverse_GrabbableComponent)
__flatbuffers_build_vector_field(3, flatbuffers_, Alloverse_GrabbableComponent_rotation_constraint, flatbuffers_double, double, Alloverse_GrabbableComponent)
__flatbuffers_build_struct_field(4, flatbuffers_, Alloverse_GrabbableComponent_target_hand_transform, Alloverse_Mat4, 128, 8, Alloverse_GrabbableComponent)

static inline Alloverse_GrabbableComponent_ref_t Alloverse_GrabbableComponent_create(flatbuffers_builder_t *B __Alloverse_GrabbableComponent_formal_args)
{
    if (Alloverse_GrabbableComponent_start(B)
        || Alloverse_GrabbableComponent_target_hand_transform_add(B, v4)
        || Alloverse_GrabbableComponent_actuate_on_add(B, v1)
        || Alloverse_GrabbableComponent_translation_constraint_add(B, v2)
        || Alloverse_GrabbableComponent_rotation_constraint_add(B, v3)
        || Alloverse_GrabbableComponent_grabbable_add(B, v0)) {
        return 0;
    }
    return Alloverse_GrabbableComponent_end(B);
}

static Alloverse_GrabbableComponent_ref_t Alloverse_GrabbableComponent_clone(flatbuffers_builder_t *B, Alloverse_GrabbableComponent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_GrabbableComponent_start(B)
        || Alloverse_GrabbableComponent_target_hand_transform_pick(B, t)
        || Alloverse_GrabbableComponent_actuate_on_pick(B, t)
        || Alloverse_GrabbableComponent_translation_constraint_pick(B, t)
        || Alloverse_GrabbableComponent_rotation_constraint_pick(B, t)
        || Alloverse_GrabbableComponent_grabbable_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_GrabbableComponent_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, Alloverse_EntitySpec_components, Alloverse_Components, Alloverse_EntitySpec)
__flatbuffers_build_table_vector_field(1, flatbuffers_, Alloverse_EntitySpec_children, Alloverse_EntitySpec, Alloverse_EntitySpec)

static inline Alloverse_EntitySpec_ref_t Alloverse_EntitySpec_create(flatbuffers_builder_t *B __Alloverse_EntitySpec_formal_args)
{
    if (Alloverse_EntitySpec_start(B)
        || Alloverse_EntitySpec_components_add(B, v0)
        || Alloverse_EntitySpec_children_add(B, v1)) {
        return 0;
    }
    return Alloverse_EntitySpec_end(B);
}

static Alloverse_EntitySpec_ref_t Alloverse_EntitySpec_clone(flatbuffers_builder_t *B, Alloverse_EntitySpec_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (Alloverse_EntitySpec_start(B)
        || Alloverse_EntitySpec_components_pick(B, t)
        || Alloverse_EntitySpec_children_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, Alloverse_EntitySpec_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* ALLOVERSE_BUILDER_H */
