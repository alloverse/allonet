#ifndef ALLOVERSE_READER_H
#define ALLOVERSE_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

typedef struct Alloverse_Mat4 Alloverse_Mat4_t;
typedef const Alloverse_Mat4_t *Alloverse_Mat4_struct_t;
typedef Alloverse_Mat4_t *Alloverse_Mat4_mutable_struct_t;
typedef const Alloverse_Mat4_t *Alloverse_Mat4_vec_t;
typedef Alloverse_Mat4_t *Alloverse_Mat4_mutable_vec_t;

typedef const struct Alloverse_State_table *Alloverse_State_table_t;
typedef struct Alloverse_State_table *Alloverse_State_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_State_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_State_mutable_vec_t;
typedef const struct Alloverse_Entity_table *Alloverse_Entity_table_t;
typedef struct Alloverse_Entity_table *Alloverse_Entity_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_Entity_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_Entity_mutable_vec_t;
typedef const struct Alloverse_Components_table *Alloverse_Components_table_t;
typedef struct Alloverse_Components_table *Alloverse_Components_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_Components_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_Components_mutable_vec_t;
typedef const struct Alloverse_TransformComponent_table *Alloverse_TransformComponent_table_t;
typedef struct Alloverse_TransformComponent_table *Alloverse_TransformComponent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_TransformComponent_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_TransformComponent_mutable_vec_t;
typedef const struct Alloverse_RelationshipsComponent_table *Alloverse_RelationshipsComponent_table_t;
typedef struct Alloverse_RelationshipsComponent_table *Alloverse_RelationshipsComponent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_RelationshipsComponent_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_RelationshipsComponent_mutable_vec_t;
typedef const struct Alloverse_LiveMediaMetadata_table *Alloverse_LiveMediaMetadata_table_t;
typedef struct Alloverse_LiveMediaMetadata_table *Alloverse_LiveMediaMetadata_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_LiveMediaMetadata_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_LiveMediaMetadata_mutable_vec_t;
typedef const struct Alloverse_LiveMediaComponent_table *Alloverse_LiveMediaComponent_table_t;
typedef struct Alloverse_LiveMediaComponent_table *Alloverse_LiveMediaComponent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Alloverse_LiveMediaComponent_vec_t;
typedef flatbuffers_uoffset_t *Alloverse_LiveMediaComponent_mutable_vec_t;
#ifndef Alloverse_State_file_identifier
#define Alloverse_State_file_identifier 0
#endif
/* deprecated, use Alloverse_State_file_identifier */
#ifndef Alloverse_State_identifier
#define Alloverse_State_identifier 0
#endif
#define Alloverse_State_type_hash ((flatbuffers_thash_t)0x33abe795)
#define Alloverse_State_type_identifier "\x95\xe7\xab\x33"
#ifndef Alloverse_State_file_extension
#define Alloverse_State_file_extension "bin"
#endif
#ifndef Alloverse_Entity_file_identifier
#define Alloverse_Entity_file_identifier 0
#endif
/* deprecated, use Alloverse_Entity_file_identifier */
#ifndef Alloverse_Entity_identifier
#define Alloverse_Entity_identifier 0
#endif
#define Alloverse_Entity_type_hash ((flatbuffers_thash_t)0x35b7613b)
#define Alloverse_Entity_type_identifier "\x3b\x61\xb7\x35"
#ifndef Alloverse_Entity_file_extension
#define Alloverse_Entity_file_extension "bin"
#endif
#ifndef Alloverse_Components_file_identifier
#define Alloverse_Components_file_identifier 0
#endif
/* deprecated, use Alloverse_Components_file_identifier */
#ifndef Alloverse_Components_identifier
#define Alloverse_Components_identifier 0
#endif
#define Alloverse_Components_type_hash ((flatbuffers_thash_t)0x36db0934)
#define Alloverse_Components_type_identifier "\x34\x09\xdb\x36"
#ifndef Alloverse_Components_file_extension
#define Alloverse_Components_file_extension "bin"
#endif
#ifndef Alloverse_TransformComponent_file_identifier
#define Alloverse_TransformComponent_file_identifier 0
#endif
/* deprecated, use Alloverse_TransformComponent_file_identifier */
#ifndef Alloverse_TransformComponent_identifier
#define Alloverse_TransformComponent_identifier 0
#endif
#define Alloverse_TransformComponent_type_hash ((flatbuffers_thash_t)0x1b77ec2b)
#define Alloverse_TransformComponent_type_identifier "\x2b\xec\x77\x1b"
#ifndef Alloverse_TransformComponent_file_extension
#define Alloverse_TransformComponent_file_extension "bin"
#endif
#ifndef Alloverse_RelationshipsComponent_file_identifier
#define Alloverse_RelationshipsComponent_file_identifier 0
#endif
/* deprecated, use Alloverse_RelationshipsComponent_file_identifier */
#ifndef Alloverse_RelationshipsComponent_identifier
#define Alloverse_RelationshipsComponent_identifier 0
#endif
#define Alloverse_RelationshipsComponent_type_hash ((flatbuffers_thash_t)0x1c20c9a2)
#define Alloverse_RelationshipsComponent_type_identifier "\xa2\xc9\x20\x1c"
#ifndef Alloverse_RelationshipsComponent_file_extension
#define Alloverse_RelationshipsComponent_file_extension "bin"
#endif
#ifndef Alloverse_LiveMediaMetadata_file_identifier
#define Alloverse_LiveMediaMetadata_file_identifier 0
#endif
/* deprecated, use Alloverse_LiveMediaMetadata_file_identifier */
#ifndef Alloverse_LiveMediaMetadata_identifier
#define Alloverse_LiveMediaMetadata_identifier 0
#endif
#define Alloverse_LiveMediaMetadata_type_hash ((flatbuffers_thash_t)0xdd57d477)
#define Alloverse_LiveMediaMetadata_type_identifier "\x77\xd4\x57\xdd"
#ifndef Alloverse_LiveMediaMetadata_file_extension
#define Alloverse_LiveMediaMetadata_file_extension "bin"
#endif
#ifndef Alloverse_LiveMediaComponent_file_identifier
#define Alloverse_LiveMediaComponent_file_identifier 0
#endif
/* deprecated, use Alloverse_LiveMediaComponent_file_identifier */
#ifndef Alloverse_LiveMediaComponent_identifier
#define Alloverse_LiveMediaComponent_identifier 0
#endif
#define Alloverse_LiveMediaComponent_type_hash ((flatbuffers_thash_t)0xc8acee81)
#define Alloverse_LiveMediaComponent_type_identifier "\x81\xee\xac\xc8"
#ifndef Alloverse_LiveMediaComponent_file_extension
#define Alloverse_LiveMediaComponent_file_extension "bin"
#endif
#ifndef Alloverse_Mat4_file_identifier
#define Alloverse_Mat4_file_identifier 0
#endif
/* deprecated, use Alloverse_Mat4_file_identifier */
#ifndef Alloverse_Mat4_identifier
#define Alloverse_Mat4_identifier 0
#endif
#define Alloverse_Mat4_type_hash ((flatbuffers_thash_t)0x5ea33d82)
#define Alloverse_Mat4_type_identifier "\x82\x3d\xa3\x5e"
#ifndef Alloverse_Mat4_file_extension
#define Alloverse_Mat4_file_extension "bin"
#endif

typedef int8_t Alloverse_LiveMediaType_enum_t;
__flatbuffers_define_integer_type(Alloverse_LiveMediaType, Alloverse_LiveMediaType_enum_t, 8)
#define Alloverse_LiveMediaType_Audio ((Alloverse_LiveMediaType_enum_t)INT8_C(0))
#define Alloverse_LiveMediaType_Video ((Alloverse_LiveMediaType_enum_t)INT8_C(1))

static inline const char *Alloverse_LiveMediaType_name(Alloverse_LiveMediaType_enum_t value)
{
    switch (value) {
    case Alloverse_LiveMediaType_Audio: return "Audio";
    case Alloverse_LiveMediaType_Video: return "Video";
    default: return "";
    }
}

static inline int Alloverse_LiveMediaType_is_known_value(Alloverse_LiveMediaType_enum_t value)
{
    switch (value) {
    case Alloverse_LiveMediaType_Audio: return 1;
    case Alloverse_LiveMediaType_Video: return 1;
    default: return 0;
    }
}

typedef int16_t Alloverse_LiveMediaFormat_enum_t;
__flatbuffers_define_integer_type(Alloverse_LiveMediaFormat, Alloverse_LiveMediaFormat_enum_t, 16)
#define Alloverse_LiveMediaFormat_Opus ((Alloverse_LiveMediaFormat_enum_t)INT16_C(0))
#define Alloverse_LiveMediaFormat_MJPEG ((Alloverse_LiveMediaFormat_enum_t)INT16_C(1))
#define Alloverse_LiveMediaFormat_H264 ((Alloverse_LiveMediaFormat_enum_t)INT16_C(2))

static inline const char *Alloverse_LiveMediaFormat_name(Alloverse_LiveMediaFormat_enum_t value)
{
    switch (value) {
    case Alloverse_LiveMediaFormat_Opus: return "Opus";
    case Alloverse_LiveMediaFormat_MJPEG: return "MJPEG";
    case Alloverse_LiveMediaFormat_H264: return "H264";
    default: return "";
    }
}

static inline int Alloverse_LiveMediaFormat_is_known_value(Alloverse_LiveMediaFormat_enum_t value)
{
    switch (value) {
    case Alloverse_LiveMediaFormat_Opus: return 1;
    case Alloverse_LiveMediaFormat_MJPEG: return 1;
    case Alloverse_LiveMediaFormat_H264: return 1;
    default: return 0;
    }
}

typedef int8_t Alloverse_LiveMediaChannelLayout_enum_t;
__flatbuffers_define_integer_type(Alloverse_LiveMediaChannelLayout, Alloverse_LiveMediaChannelLayout_enum_t, 8)
#define Alloverse_LiveMediaChannelLayout_Mono ((Alloverse_LiveMediaChannelLayout_enum_t)INT8_C(0))

static inline const char *Alloverse_LiveMediaChannelLayout_name(Alloverse_LiveMediaChannelLayout_enum_t value)
{
    switch (value) {
    case Alloverse_LiveMediaChannelLayout_Mono: return "Mono";
    default: return "";
    }
}

static inline int Alloverse_LiveMediaChannelLayout_is_known_value(Alloverse_LiveMediaChannelLayout_enum_t value)
{
    switch (value) {
    case Alloverse_LiveMediaChannelLayout_Mono: return 1;
    default: return 0;
    }
}


/** ////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////  */
struct Alloverse_Mat4 {
    alignas(4) float m[16];
};
static_assert(sizeof(Alloverse_Mat4_t) == 64, "struct size mismatch");

static inline const Alloverse_Mat4_t *Alloverse_Mat4__const_ptr_add(const Alloverse_Mat4_t *p, size_t i) { return p + i; }
static inline Alloverse_Mat4_t *Alloverse_Mat4__ptr_add(Alloverse_Mat4_t *p, size_t i) { return p + i; }
static inline Alloverse_Mat4_struct_t Alloverse_Mat4_vec_at(Alloverse_Mat4_vec_t vec, size_t i)
__flatbuffers_struct_vec_at(vec, i)
static inline size_t Alloverse_Mat4__size(void) { return 64; }
static inline size_t Alloverse_Mat4_vec_len(Alloverse_Mat4_vec_t vec)
__flatbuffers_vec_len(vec)
__flatbuffers_struct_as_root(Alloverse_Mat4)

__flatbuffers_define_struct_scalar_fixed_array_field(Alloverse_Mat4, m, flatbuffers_float, float, 16)


/** ////////////////////////////////////////////////////////////
 * //////////////////////////////////////////////////////////// */
struct Alloverse_State_table { uint8_t unused__; };

static inline size_t Alloverse_State_vec_len(Alloverse_State_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_State_table_t Alloverse_State_vec_at(Alloverse_State_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_State_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_State)

__flatbuffers_define_scalar_field(0, Alloverse_State, revision, flatbuffers_uint64, uint64_t, UINT64_C(0))
__flatbuffers_define_vector_field(1, Alloverse_State, entities, Alloverse_Entity_vec_t, 0)

struct Alloverse_Entity_table { uint8_t unused__; };

static inline size_t Alloverse_Entity_vec_len(Alloverse_Entity_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_Entity_table_t Alloverse_Entity_vec_at(Alloverse_Entity_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_Entity_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_Entity)

__flatbuffers_define_string_field(0, Alloverse_Entity, id, 0)
__flatbuffers_define_string_field(1, Alloverse_Entity, owner_agent_id, 0)
__flatbuffers_define_table_field(2, Alloverse_Entity, components, Alloverse_Components_table_t, 0)

struct Alloverse_Components_table { uint8_t unused__; };

static inline size_t Alloverse_Components_vec_len(Alloverse_Components_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_Components_table_t Alloverse_Components_vec_at(Alloverse_Components_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_Components_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_Components)

__flatbuffers_define_table_field(0, Alloverse_Components, transform, Alloverse_TransformComponent_table_t, 0)
__flatbuffers_define_table_field(1, Alloverse_Components, relationships, Alloverse_RelationshipsComponent_table_t, 0)
__flatbuffers_define_table_field(2, Alloverse_Components, live_media, Alloverse_LiveMediaComponent_table_t, 0)
__flatbuffers_define_vector_field(3, Alloverse_Components, flex, flatbuffers_uint8_vec_t, 0)

/** ////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////
 * ////////////////////////////////////////////////////////////  */
struct Alloverse_TransformComponent_table { uint8_t unused__; };

static inline size_t Alloverse_TransformComponent_vec_len(Alloverse_TransformComponent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_TransformComponent_table_t Alloverse_TransformComponent_vec_at(Alloverse_TransformComponent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_TransformComponent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_TransformComponent)

__flatbuffers_define_struct_field(0, Alloverse_TransformComponent, matrix, Alloverse_Mat4_struct_t, 0)

struct Alloverse_RelationshipsComponent_table { uint8_t unused__; };

static inline size_t Alloverse_RelationshipsComponent_vec_len(Alloverse_RelationshipsComponent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_RelationshipsComponent_table_t Alloverse_RelationshipsComponent_vec_at(Alloverse_RelationshipsComponent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_RelationshipsComponent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_RelationshipsComponent)

__flatbuffers_define_string_field(0, Alloverse_RelationshipsComponent, parent, 0)

struct Alloverse_LiveMediaMetadata_table { uint8_t unused__; };

static inline size_t Alloverse_LiveMediaMetadata_vec_len(Alloverse_LiveMediaMetadata_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_LiveMediaMetadata_table_t Alloverse_LiveMediaMetadata_vec_at(Alloverse_LiveMediaMetadata_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_LiveMediaMetadata_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_LiveMediaMetadata)

__flatbuffers_define_scalar_field(0, Alloverse_LiveMediaMetadata, sample_rate, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(1, Alloverse_LiveMediaMetadata, channel_layout, Alloverse_LiveMediaChannelLayout, Alloverse_LiveMediaChannelLayout_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(2, Alloverse_LiveMediaMetadata, width, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(3, Alloverse_LiveMediaMetadata, height, flatbuffers_int32, int32_t, INT32_C(0))

struct Alloverse_LiveMediaComponent_table { uint8_t unused__; };

static inline size_t Alloverse_LiveMediaComponent_vec_len(Alloverse_LiveMediaComponent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Alloverse_LiveMediaComponent_table_t Alloverse_LiveMediaComponent_vec_at(Alloverse_LiveMediaComponent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Alloverse_LiveMediaComponent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Alloverse_LiveMediaComponent)

__flatbuffers_define_scalar_field(0, Alloverse_LiveMediaComponent, track_id, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(1, Alloverse_LiveMediaComponent, type, Alloverse_LiveMediaType, Alloverse_LiveMediaType_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(2, Alloverse_LiveMediaComponent, format, Alloverse_LiveMediaFormat, Alloverse_LiveMediaFormat_enum_t, INT16_C(0))
__flatbuffers_define_table_field(3, Alloverse_LiveMediaComponent, metadata, Alloverse_LiveMediaMetadata_table_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* ALLOVERSE_READER_H */
